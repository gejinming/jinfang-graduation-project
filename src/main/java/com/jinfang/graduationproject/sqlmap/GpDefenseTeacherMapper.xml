<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinfang.graduationproject.mapper.GpDefenseTeacherMapper">

    <resultMap id="BaseResultMap" type="com.jinfang.graduationproject.domain.GpDefenseTeacher">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
        <result column="teacher_id" jdbcType="BIGINT" property="teacherId"/>
        <result column="teacher_name" jdbcType="VARCHAR" property="teacherName"/>
        <result column="major_id" jdbcType="BIGINT" property="majorId"/>
        <result column="major_name" jdbcType="VARCHAR" property="majorName"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="operate_user" jdbcType="VARCHAR" property="operateUser"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate"/>
        <result column="is_del" jdbcType="INTEGER" property="isDel"/>
    </resultMap>

    <insert id="add" parameterType="com.jinfang.graduationproject.domain.GpDefenseTeacher">
        insert into gp_defense_teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="groupName != null">
                group_name,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="teacherName != null">
                teacher_name,
            </if>
            <if test="majorId != null">
                major_id,
            </if>
            <if test="majorName != null">
                major_name,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="operateUser != null">
                operate_user,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="modifyDate != null">
                modify_date,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
            <if test="groupName != null">
                #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=BIGINT},
            </if>
            <if test="teacherName != null">
                #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="majorId != null">
                #{majorId,jdbcType=BIGINT},
            </if>
            <if test="majorName != null">
                #{majorName,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="operateUser != null">
                #{operateUser,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <delete id="delete" parameterType="java.lang.Long">
        delete
        from gp_defense_teacher
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <update id="update" parameterType="com.jinfang.graduationproject.domain.GpDefenseTeacher">
        update gp_defense_teacher
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=VARCHAR},
            </if>
            <if test="groupName != null">
                group_name = #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=BIGINT},
            </if>
            <if test="teacherName != null">
                teacher_name = #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="majorId != null">
                major_id = #{majorId,jdbcType=BIGINT},
            </if>
            <if test="majorName != null">
                major_name = #{majorName,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="operateUser != null">
                operate_user = #{operateUser,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from gp_defense_teacher
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findByTeacherId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from gp_defense_teacher
        where teacher_id = #{teacherId,jdbcType=BIGINT}
        order by id desc
        limit 1
    </select>


    <select id="findPage" resultMap="BaseResultMap">
        select dt.id, dt.grade, dt.group_name, dt.teacher_id, ct.major_id,
        dt.type, dt.operate_user, ct.name as teacher_name, so.name as major_name
        from gp_defense_teacher dt
        join cc_teacher ct on dt.teacher_id = ct.id and ct.is_del = 0
        LEFT JOIN sys_office so ON so.id = ct.major_id

        where ct.school_id = #{schoolId}

        <if test="grade != null and grade != ''">
            and dt.grade = #{grade}
        </if>

        <if test="groupName != null and groupName != ''">
            and dt.group_name = #{groupName}
        </if>

        <if test="teacherName != null and teacherName != ''">
            and ct.name like CONCAT('%',#{teacherName},'%')
        </if>
    </select>

    <select id="findPageInChecker" resultMap="BaseResultMap">
        select dt.id,
               dt.grade,
               dt.group_name,
               dt.teacher_id,
               dt.major_id,
               dt.type,
               dt.operate_user,
               ct.name as teacher_name,
               so.name as major_name
        from gp_defense_teacher dt
                 join cc_teacher ct on dt.teacher_id = ct.id and ct.is_del = 0
                 LEFT JOIN sys_office so ON so.id = ct.major_id

        where ct.school_id = #{schoolId}
    </select>

    <insert id="batchInsert" parameterType="list">
        insert into gp_defense_teacher (grade, group_name, teacher_id, major_id, type, operate_user)
        values

        <foreach collection="list" item="teacher" index="index"
                 separator=",">
            (#{teacher.grade,jdbcType=VARCHAR},
            #{teacher.groupName,jdbcType=VARCHAR},
            #{teacher.teacherId,jdbcType=BIGINT},
            #{teacher.majorId,jdbcType=BIGINT},
            #{teacher.type,jdbcType=INTEGER},
            #{teacher.operateUser,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <select id="findMembers" resultMap="BaseResultMap">
        select distinct ct.id as teacher_id, ct.name as teacher_name, dt.type
        from gp_defense_teacher dt
                 join cc_teacher ct on dt.teacher_id = ct.id

        where dt.grade = #{grade}
          and dt.group_name in
              (select group_name from gp_defense_teacher where teacher_id = #{teacherId})

    </select>

    <update id="updateNotHeadman">
        update gp_defense_teacher
        set type = 1
        where grade = #{grade}
          and group_name = #{groupName}
          and id != #{id}
    </update>


</mapper>