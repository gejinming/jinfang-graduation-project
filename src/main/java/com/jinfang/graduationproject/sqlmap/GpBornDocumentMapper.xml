<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinfang.graduationproject.mapper.GpBornDocumentMapper">

    <resultMap id="BaseResultMap" type="com.jinfang.graduationproject.domain.GpBornDocument">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="subject_id" jdbcType="BIGINT" property="subjectId"/>
        <result column="student_id" jdbcType="BIGINT" property="studentId"/>
        <result column="teacher_id" jdbcType="BIGINT" property="teacherId"/>
        <result column="school_id" jdbcType="BIGINT" property="schoolId"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <result column="born_type" jdbcType="INTEGER" property="bornType"/>
        <result column="file_path" jdbcType="VARCHAR" property="filePath"/>
        <result column="file_type" jdbcType="VARCHAR" property="fileType"/>
        <result column="download_times" jdbcType="INTEGER" property="downloadTimes"/>
        <result column="is_super" jdbcType="INTEGER" property="isSuper"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate"/>
        <result column="is_del" jdbcType="INTEGER" property="isDel"/>
        <result column="subject_name" jdbcType="VARCHAR" property="subjectName"/>
        <result column="student_name" jdbcType="VARCHAR" property="studentName"/>
    </resultMap>

    <insert id="add" parameterType="com.jinfang.graduationproject.domain.GpBornDocument">
        insert into gp_born_document
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="subjectId != null">
                subject_id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="bornType != null">
                born_type,
            </if>
            <if test="filePath != null">
                file_path,
            </if>
            <if test="fileType != null">
                file_type,
            </if>
            <if test="downloadTimes != null">
                download_times,
            </if>
            <if test="isSuper != null">
                is_super,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="modifyDate != null">
                modify_date,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="subjectId != null">
                #{subjectId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=BIGINT},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=BIGINT},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
            <if test="bornType != null">
                #{bornType,jdbcType=INTEGER},
            </if>
            <if test="filePath != null">
                #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="downloadTimes != null">
                #{downloadTimes,jdbcType=INTEGER},
            </if>
            <if test="isSuper != null">
                #{isSuper,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <delete id="delete" parameterType="java.lang.Long">
        delete
        from gp_born_document
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteBySubjectIdAndStudentId">
        delete
        from gp_born_document
        where subject_id = #{subjectId,jdbcType=BIGINT}
          and student_id = #{studentId}
    </delete>

    <delete id="deleteByGradeAndSchoolId">
        delete
        from gp_born_document
        where grade = #{grade,jdbcType=VARCHAR}
          and school_id = #{schoolId}
    </delete>

    <update id="update" parameterType="com.jinfang.graduationproject.domain.GpBornDocument">
        update gp_born_document
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="subjectId != null">
                subject_id = #{subjectId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=BIGINT},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=BIGINT},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=VARCHAR},
            </if>
            <if test="bornType != null">
                born_type = #{bornType,jdbcType=INTEGER},
            </if>
            <if test="filePath != null">
                file_path = #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="downloadTimes != null">
                download_times = #{downloadTimes,jdbcType=INTEGER},
            </if>
            <if test="isSuper != null">
                is_super = #{isSuper,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from gp_born_document
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findBySubjectStudentId" resultMap="BaseResultMap">
        select gbd.*, gs.name as subject_name, cs.name as student_name
        from gp_born_document gbd
                 join gp_subject_student gss on gbd.subject_id = gss.subject_id and gbd.student_id = gss.student_id
                 join gp_subject gs on gss.subject_id = gs.id and gs.is_del = 0 and gs.status = 2
                 join cc_student cs on cs.id = gss.student_id and cs.is_del = 0
        where gss.id = #{subjectStudentId,jdbcType=BIGINT}
    </select>

    <select id="findByGrade" resultMap="BaseResultMap">
        select *
        from gp_born_document
        where grade = #{grade,jdbcType=VARCHAR}
    </select>

    <select id="findPage" resultMap="BaseResultMap">
        select *
        from gp_born_document
    </select>

    <select id="selectGradeList" resultType="java.lang.String">
        select distinct(grade)
        from gp_born_document order by grade
    </select>

    <insert id="batchInsert" parameterType="list">
        insert into gp_born_document (subject_id, student_id, teacher_id,
        school_id,grade,born_type,file_path,file_type,is_super)
        values
        <foreach collection="list" item="record" index="index"
                 separator=",">
            (#{record.subjectId,jdbcType=BIGINT},
            #{record.studentId,jdbcType=BIGINT},
            #{record.teacherId,jdbcType=BIGINT},
            #{record.schoolId,jdbcType=BIGINT},
            #{record.grade,jdbcType=VARCHAR},
            #{record.bornType,jdbcType=INTEGER},
            #{record.filePath,jdbcType=VARCHAR},
            #{record.fileType,jdbcType=VARCHAR},
            #{record.isSuper,jdbcType=INTEGER})
        </foreach>
    </insert>

</mapper>